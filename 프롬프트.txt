1. 기존 작동하는 코드의 구조를 먼저 보여주고 설명
2. 새로 만들 기능이 "어떤 기존 기능"과 비슷한지 명시
3. 수정/추가/삭제 여부를 명확히 지시
4. 원본 형식 유지 여부 강조
```

---

## 🎯 실전 프롬프트 예시

### 패턴 1: 기존 기능 복제
```
[참고할 기존 코드]
- 파일: main.js
- 기능: 서브넷 랜덤 문제 생성
- 구조:
  * 1번 문제 클릭 → generateRandomSubnetProblem() 실행
  * 2번 문제 클릭 → generateRandomFLSMProblem() 실행
  * 각 문제마다 개별 함수 1개

[만들어야 할 기능]
- 파일: main.js
- 기능: 프로세스 스케줄링 랜덤 문제 생성
- 요구사항:
  * 서브넷과 똑같은 구조로 만들기
  * 2번 문제 클릭 → generateProcessSchedule2() 실행
  * 3번 문제 클릭 → generateProcessSchedule3() 실행
  * 총 10개 함수 필요 (2~11번)

[중요 제약사항]
- ❌ 코드 구조 변경 금지
- ❌ 함수 이름 마음대로 짓지 말기
- ✅ 서브넷 구조 그대로 복사해서 이름만 바꾸기
- ✅ 각 문제의 원본 형식(테이블/텍스트) 절대 유지
```

---

### 패턴 2: 특정 문제 형식 유지
```
[원본 문제 형식]
파일에 있는 6번 문제:
"대기하고 있는 프로세스 P1, P2, P3, P4의 처리시간은 24[ms], 9[ms], 15[ms], 10[ms]일 때..."

[요구사항]
- 이 문제의 "형식"을 그대로 유지
- 바꿀 것: 숫자(24, 9, 15, 10)만 랜덤으로
- 바꾸지 말 것: 
  * 문장 구조
  * 테이블 유무
  * 선택지 형식

[금지사항]
- ❌ 갑자기 테이블 추가하지 말기
- ❌ 문장 바꾸지 말기
- ❌ P1, P2, P3, P4를 다른 이름으로 바꾸지 말기
```

---

### 패턴 3: 파일 구조 명시
```
[전체 파일 구조]
1. main.js
   - 역할: 문제 번호 받아서 해당 함수 호출
   - 수정 위치: generateRandomProblem() 함수 안
   - 수정 내용: else if (currentProblemIndex === 1) { generateProcessSchedule2(); }

2. ProblemGenerators.js
   - 역할: 각 문제별 랜덤 생성 함수 정의
   - 추가 위치: 파일 맨 아래 "프로세스 스케줄링 시작" 주석 아래
   - 추가 함수: generateProcessSchedule2(), generateProcessSchedule3(), ...

3. simulators.js
   - 역할: 알고리즘 시뮬레이션 함수
   - 추가 함수: simulateSRTScheduling()

[작업 순서]
1. simulators.js에 simulateSRTScheduling() 추가
2. ProblemGenerators.js에 함수 10개 추가
3. main.js에 분기 처리 추가
```

---

### 패턴 4: 명확한 금지 사항
```
[절대 하지 말아야 할 것]
❌ 내 마음대로 코드 수정/추가/삭제
❌ 주석에 이모티콘 붙이기
❌ 원본 문제의 형식(테이블/텍스트) 바꾸기
❌ 함수 이름 통일 안 하고 여러 개 만들기
❌ "랜덤" 버튼 텍스트를 숫자로 바꾸기

[반드시 해야 할 것]
✅ 기존 작동하는 코드 구조 그대로 따라하기
✅ 수정할 위치 정확히 물어보기
✅ 원본 형식 절대 유지하기
✅ 함수 이름 2, 3, 4... 순서대로 만들기
```

---

### 패턴 5: 단계별 확인
```
[1단계: 구조 이해]
Q: "서브넷 랜덤 기능이 어떻게 작동하는지 설명해봐"
A: (AI가 이해한 내용 설명)

[2단계: 확인]
Q: "맞아. 그럼 프로세스 스케줄링도 똑같은 구조로 만들면 돼?"
A: 네!

[3단계: 실행]
Q: "그럼 만들어봐. main.js부터 시작"
A: (코드 생성)

[4단계: 검증]
Q: "함수 이름이 generateProcessSchedule2 맞아?"
A: 네!
```

---

## 🎯 최종 요약 템플릿
```
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📌 작업 요청서
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

[참고할 기존 기능]
- 카테고리: 서브넷
- 파일: main.js, ProblemGenerators.js
- 구조: 각 문제마다 개별 함수 1개

[새로 만들 기능]
- 카테고리: 프로세스 스케줄링
- 파일: (동일)
- 구조: (동일)

[중요 제약]
❌ 금지: 원본 형식 변경
✅ 필수: 기존 구조 그대로 복사

[원본 파일 첨부]
(파일 업로드)

[질문]
1. 구조 이해했어?
2. 함수 이름 generateProcessSchedule2 맞지?
3. 원본 형식 유지해야 하는 거 알지?

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━